void print_sets(std::vector<int>& sets)
{
    for (int i = 0; i < sets.size(); i++)
	std::cout << "elem: " << i << " -> " << sets.at(i) << std::endl;
}

int compress_find(int elem, std::vector<int>& sets)
{
    std::vector<int> elems;
    while (sets.at(elem) != elem)
    {
	elems.push_back(elem);
	elem = sets.at(elem);
    }
    for (int e : elems)
	sets.at(e) = elem;
    return elem;
}

bool is_joined(int a, int b, std::vector<int>& sets)
{
    sets.at(a) = compress_find(a, sets);
    sets.at(b) = compress_find(b, sets);
    return sets.at(a) == sets.at(b);
}

void join(int a, int b, std::vector<int>& sets)
{   
    sets.at(compress_find(b, sets)) = compress_find(a, sets);
}

int main()
{

}
